// <auto-generated />
using System;
using MeetAndGoApi.Infrastructure.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetAndGoApi.Infrastructure.Dal.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20181014164923_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.CommentDto", b =>
                {
                    b.Property<Guid>("CommentDtoId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CommentedIn");

                    b.Property<Guid>("EventDtoId");

                    b.Property<string>("Text");

                    b.Property<Guid>("UserDtoId");

                    b.HasKey("CommentDtoId");

                    b.HasIndex("EventDtoId");

                    b.HasIndex("UserDtoId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.EventDto", b =>
                {
                    b.Property<Guid>("EventDtoId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("Description");

                    b.Property<int>("EventState");

                    b.Property<double>("ExpectedRating");

                    b.Property<int>("MaxSeats");

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset>("StartTime");

                    b.Property<double>("TotalPrice");

                    b.Property<int>("Transport");

                    b.HasKey("EventDtoId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.EventUser", b =>
                {
                    b.Property<Guid>("EventDtoId");

                    b.Property<Guid>("UserDtoId");

                    b.Property<Guid>("EventUserId");

                    b.HasKey("EventDtoId", "UserDtoId");

                    b.HasIndex("UserDtoId");

                    b.ToTable("EventUser");
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.PointDto", b =>
                {
                    b.Property<Guid>("PointDtoId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EventDtoId");

                    b.Property<double>("Lat");

                    b.Property<double>("Long");

                    b.Property<string>("Name");

                    b.HasKey("PointDtoId");

                    b.HasIndex("EventDtoId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.UserDto", b =>
                {
                    b.Property<Guid>("UserDtoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompressedPhotoUrl");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("HighQualityPhoto");

                    b.Property<string>("LanguageCode");

                    b.Property<string>("LastName");

                    b.Property<double>("MemberRating");

                    b.Property<double>("OrganizerRating");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("Status");

                    b.HasKey("UserDtoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.VoteDto", b =>
                {
                    b.Property<Guid>("VoteDtoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<double>("Rating");

                    b.Property<int>("RatingType");

                    b.Property<Guid>("UserDtoId");

                    b.Property<Guid>("VoteTargetId");

                    b.HasKey("VoteDtoId");

                    b.HasIndex("UserDtoId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.CommentDto", b =>
                {
                    b.HasOne("MeetAndGoApi.Infrastructure.Dal.Dto.EventDto", "EventDto")
                        .WithMany("CommentDtos")
                        .HasForeignKey("EventDtoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MeetAndGoApi.Infrastructure.Dal.Dto.UserDto", "UserDto")
                        .WithMany("CommentDtos")
                        .HasForeignKey("UserDtoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.EventUser", b =>
                {
                    b.HasOne("MeetAndGoApi.Infrastructure.Dal.Dto.EventDto", "EventDto")
                        .WithMany("EventUsers")
                        .HasForeignKey("EventDtoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MeetAndGoApi.Infrastructure.Dal.Dto.UserDto", "UserDto")
                        .WithMany("EventUsers")
                        .HasForeignKey("UserDtoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.PointDto", b =>
                {
                    b.HasOne("MeetAndGoApi.Infrastructure.Dal.Dto.EventDto", "EventDto")
                        .WithMany("PointDtos")
                        .HasForeignKey("EventDtoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MeetAndGoApi.Infrastructure.Dal.Dto.VoteDto", b =>
                {
                    b.HasOne("MeetAndGoApi.Infrastructure.Dal.Dto.UserDto", "UserDto")
                        .WithMany("VoteDtos")
                        .HasForeignKey("UserDtoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
